# .github/workflows/deploy.yaml
name: Deploy Python Lambda API to AWS

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-1
  LAMBDA_FUNCTION_NAME: laplace-api
  PYTHON_VERSION: "3.12"
  LAMBDA_HANDLER: lambda_function.handler # Lambdaハンドラー (ファイル名.関数名)
  LAMBDA_HANDLER_FILE: lambda_function.py # Lambdaハンドラーが含まれるPythonファイル名

jobs:
  deploy_lambda:
    name: Deploy Lambda Function to AWS
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 📦 Install dependencies and create package
        run: |
          python -m pip install --upgrade pip
          mkdir deployment_package_dir
          # 必要な依存関係のみをインストール
          pip install --target ./deployment_package_dir \
            fastapi==0.110.0 \
            uvicorn==0.27.1 \
            mangum==0.17.0 \
            python-multipart==0.0.9 \
            python-jose==3.3.0 \
            passlib==1.7.4 \
            pydantic-core==2.16.3 \
            typing-extensions==4.10.0 \
            requests==2.31.0

          # アプリケーションコードをコピー
          cp -r app deployment_package_dir/
          cp ${{ env.LAMBDA_HANDLER_FILE }} deployment_package_dir/

          # 不要なファイルを削除
          cd deployment_package_dir
          find . -type d -name "__pycache__" -exec rm -r {} +
          find . -type d -name "*.dist-info" -exec rm -r {} +
          find . -type d -name "*.egg-info" -exec rm -r {} +
          find . -type f -name "*.pyc" -delete
          find . -type f -name "*.pyo" -delete
          find . -type f -name "*.pyd" -delete
          find . -type f -name "*.so" -delete
          find . -type f -name "*.dylib" -delete
          find . -type f -name "*.dll" -delete

          # ZIPファイルを作成
          zip -r ../deployment_package.zip .
          cd ..
          echo "Deployment package size: $(du -h deployment_package.zip | cut -f1)"

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # GitHub Secrets に設定
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # GitHub Secrets に設定
          aws-region: ${{ env.AWS_REGION }}

      - name: 🚀 Deploy to AWS Lambda
        run: |
          echo "Checking if Lambda function '${{ env.LAMBDA_FUNCTION_NAME }}' exists in region '${{ env.AWS_REGION }}'..."
          if aws lambda get-function --function-name ${{ env.LAMBDA_FUNCTION_NAME }} > /dev/null 2>&1; then
            echo "Lambda function '${{ env.LAMBDA_FUNCTION_NAME }}' exists. Updating function code..."
            aws lambda update-function-code \
              --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
              --zip-file fileb://deployment_package.zip \
              --publish
            echo "Function code updated successfully."

            echo "Updating function configuration (runtime and handler)..."
            aws lambda update-function-configuration \
              --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
              --handler ${{ env.LAMBDA_HANDLER }} \
              --runtime python${{ env.PYTHON_VERSION }}
            echo "Function configuration updated successfully."
          else
            echo "Lambda function '${{ env.LAMBDA_FUNCTION_NAME }}' does not exist. Creating new function..."
            echo "IMPORTANT: Ensure 'LAMBDA_EXECUTION_ROLE_ARN' is correctly set in GitHub Secrets."
            aws lambda create-function \
              --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
              --runtime python${{ env.PYTHON_VERSION }} \
              --role ${{ secrets.LAMBDA_EXECUTION_ROLE_ARN }} \
              --handler ${{ env.LAMBDA_HANDLER }} \
              --zip-file fileb://deployment_package.zip \
              --publish
            echo "Lambda function '${{ env.LAMBDA_FUNCTION_NAME }}' created successfully."
            echo "IMPORTANT: Please verify the function's IAM role, memory, timeout, and other settings in the AWS Console."
          fi

# .github/workflows/deploy.yaml
name: Deploy Python Lambda API to AWS

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-1
  LAMBDA_FUNCTION_NAME: laplace-api
  PYTHON_VERSION: "3.12"
  LAMBDA_HANDLER: lambda_function.handler # Lambda„Éè„É≥„Éâ„É©„Éº („Éï„Ç°„Ç§„É´Âêç.Èñ¢Êï∞Âêç)
  LAMBDA_HANDLER_FILE: lambda_function.py # Lambda„Éè„É≥„Éâ„É©„Éº„ÅåÂê´„Åæ„Çå„ÇãPython„Éï„Ç°„Ç§„É´Âêç

jobs:
  deploy_lambda:
    name: Deploy Lambda Function to AWS
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4

      - name: üêç Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: üì¶ Install dependencies and create package
        run: |
          python -m pip install --upgrade pip
          mkdir deployment_package_dir
          if [ -f requirements.txt ]; then
            echo "requirements.txt found. Installing dependencies..."
            pip install -r requirements.txt -t ./deployment_package_dir
          else
            echo "requirements.txt not found. Skipping dependency installation."
          fi
          echo "Copying Lambda handler file (${{ env.LAMBDA_HANDLER_FILE }}) to package directory..."
          cp ${{ env.LAMBDA_HANDLER_FILE }} ./deployment_package_dir/
          echo "Creating ZIP file from package directory..."
          cd deployment_package_dir
          zip -r ../deployment_package.zip .
          cd ..
          echo "Deployment package 'deployment_package.zip' created with dependencies."

      - name: üì¶ Create deployment package (Lambda handler file only)
        # ‰æùÂ≠ò„É©„Ç§„Éñ„É©„É™„Åå„Å™„ÅÑÂ†¥Âêà„ÅØ„ÄÅ„Åì„ÅÆ„Çπ„ÉÜ„ÉÉ„Éó„Çí‰ΩøÁî®„Åó„Åæ„Åô„ÄÇ
        # ‰æùÂ≠ò„É©„Ç§„Éñ„É©„É™„Åå„ÅÇ„ÇãÂ†¥Âêà„ÅØ„ÄÅ„Åì„ÅÆ„Çπ„ÉÜ„ÉÉ„Éó„Çí„Ç≥„É°„É≥„Éà„Ç¢„Ç¶„Éà„Åó„ÄÅ‰∏äË®ò„ÅÆ„ÄåInstall dependencies and create package„Äç„Çπ„ÉÜ„ÉÉ„Éó„Çí‰ΩøÁî®„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ
        run: |
          echo "Creating ZIP file with handler (${{ env.LAMBDA_HANDLER_FILE }}) only..."
          zip deployment_package.zip ${{ env.LAMBDA_HANDLER_FILE }}
          echo "Deployment package 'deployment_package.zip' created."

      - name: üîë Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # GitHub Secrets „Å´Ë®≠ÂÆö
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # GitHub Secrets „Å´Ë®≠ÂÆö
          aws-region: ${{ env.AWS_REGION }}

      - name: üöÄ Deploy to AWS Lambda
        run: |
          echo "Checking if Lambda function '${{ env.LAMBDA_FUNCTION_NAME }}' exists in region '${{ env.AWS_REGION }}'..."
          if aws lambda get-function --function-name ${{ env.LAMBDA_FUNCTION_NAME }} > /dev/null 2>&1; then
            echo "Lambda function '${{ env.LAMBDA_FUNCTION_NAME }}' exists. Updating function code..."
            aws lambda update-function-code \
              --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
              --zip-file fileb://deployment_package.zip \
              --publish
            echo "Function code updated successfully."

            echo "Updating function configuration (runtime and handler)..."
            aws lambda update-function-configuration \
              --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
              --handler ${{ env.LAMBDA_HANDLER }} \
              --runtime python${{ env.PYTHON_VERSION }}
            echo "Function configuration updated successfully."
          else
            echo "Lambda function '${{ env.LAMBDA_FUNCTION_NAME }}' does not exist. Creating new function..."
            echo "IMPORTANT: Ensure 'LAMBDA_EXECUTION_ROLE_ARN' is correctly set in GitHub Secrets."
            aws lambda create-function \
              --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
              --runtime python${{ env.PYTHON_VERSION }} \
              --role ${{ secrets.LAMBDA_EXECUTION_ROLE_ARN }} \ # GitHub Secrets „Å´Ë®≠ÂÆö
              --handler ${{ env.LAMBDA_HANDLER }} \
              --zip-file fileb://deployment_package.zip \
              --publish
            echo "Lambda function '${{ env.LAMBDA_FUNCTION_NAME }}' created successfully."
            echo "IMPORTANT: Please verify the function's IAM role, memory, timeout, and other settings in the AWS Console."
          fi
